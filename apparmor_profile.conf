# AppArmor profile for the Cowrie Honeypot Docker container
#
# Profile Name: docker-cowrie
#
# How to load this profile:
# 1. Save this file (e.g., as /etc/apparmor.d/docker-cowrie).
# 2. Load the profile into the kernel:
#    sudo apparmor_parser -r -W /etc/apparmor.d/docker-cowrie
#    (or apparmor_parser -a -W /etc/apparmor.d/docker-cowrie if it's the first time)
# 3. Verify the profile is loaded:
#    sudo aa-status
#
# How to run a Docker container with this profile:
#    docker run --security-opt apparmor=docker-cowrie <your-cowrie-image>
#
# Note: This profile is a starting point and might need adjustments based on
# the specific Cowrie version, plugins, and container setup.
# Monitor AppArmor logs (e.g., /var/log/audit/audit.log or using `dmesg`)
# for denied operations and refine the profile accordingly.

#include <tunables/global>

profile docker-cowrie flags=(attach_disconnected,mediate_deleted) {
  # Include common abstractions
  # base: provides basic rules for most programs
  # nameservice: provides rules for DNS resolution
  include <abstractions/base>
  include <abstractions/nameservice>
  include <abstractions/python> # For python execution if cowrie is python based

  # Deny by default to most of the filesystem
  # w: write, u: "unsafe" execute (includes some ioctls), x: execute,
  # m: memory map executable, l: link, k: lock
  deny /** wux,
  deny /** m,
  deny /** l,
  deny /** k,

  # --- Network Rules ---
  # Allow TCP listen and accept on Cowrie's standard SSH port (default 2222)
  # and Telnet port (default 2223) if used.
  # Adjust the port numbers if your Cowrie configuration is different.
  network inet tcp listen stream port 2222,
  network inet6 tcp listen stream port 2222,
  network inet tcp accept stream port 2222,
  network inet6 tcp accept stream port 2222,

  # If Cowrie's Telnet is enabled (default port 2223)
  # network inet tcp listen stream port 2223,
  # network inet6 tcp listen stream port 2223,
  # network inet tcp accept stream port 2223,
  # network inet6 tcp accept stream port 2223,

  # Allow outgoing connections if Cowrie needs to download files (e.g., malware samples via wget/curl commands)
  # This is a broad rule; restrict further if possible (e.g., specific ports or IP addresses).
  network inet stream connect,
  network inet6 stream connect,
  network inet dgram, # For DNS, etc.
  network inet6 dgram, # For DNS, etc.


  # --- File System Rules ---
  # Allow read access to essential system libraries and binaries
  /lib/** r,
  /usr/lib/** r,
  /bin/** r,
  /usr/bin/** r,
  /sbin/** r,          # For utilities like ip, ifconfig if needed by cowrie scripts
  /usr/sbin/** r,      # For utilities like ip, ifconfig if needed by cowrie scripts
  /etc/ld.so.cache r,
  /etc/localtime r,    # For correct timezone information
  /etc/protocols r,    # For network protocol information
  /etc/services r,     # For network service information

  # Python specific paths (adjust Python version X.Y as needed)
  # These are common locations; actual paths might vary depending on the container image.
  /usr/lib/python3.*/ Puxr, # Allow execution from python lib dirs (Puxr = discrete profile + unconstrained execute + read)
  /usr/lib/python3.*/ ** r,
  /usr/local/lib/python3.*/ Puxr,
  /usr/local/lib/python3.*/ ** r,

  # Cowrie specific paths
  # Assuming Cowrie is installed in /opt/cowrie. Adjust if different.
  # r: read, w: write, x: execute, k: lock, m: mmap, l: link
  # Using 'Px' for scripts to execute them under a child profile.
  # Using 'ix' for binaries that should inherit the current profile's restrictions.

  # Cowrie installation directory - general read access
  /opt/cowrie/ r,
  /opt/cowrie/** r,

  # Core Cowrie executables/scripts (e.g., cowrie start, python scripts)
  # Need to identify the main scripts/binaries and grant execute.
  # Example: if cowrie is started via a shell script or directly via python
  /opt/cowrie/cowrie-env/bin/python Px,
  /opt/cowrie/cowrie-env/bin/python3 Px,
  /opt/cowrie/start.sh Px, # If you have a startup script
  /opt/cowrie/bin/cowrie Px, # If cowrie has a binary/script in bin

  # Allow read/write/execute to the virtual environment if used
  /opt/cowrie/cowrie-env/** rwk, # More permissive, refine if possible
  /opt/cowrie/cowrie-env/bin/* Px,

  # Cowrie configuration files (read-only is often sufficient at runtime)
  /opt/cowrie/etc/** r,
  /opt/cowrie/cowrie.cfg r,
  /opt/cowrie/userdb.txt r,

  # Cowrie log directory (write access needed)
  /opt/cowrie/var/log/cowrie/ w,          # The directory itself
  /opt/cowrie/var/log/cowrie/** rw,       # Log files within the directory

  # Cowrie download directory (write access needed for storing downloaded files)
  /opt/cowrie/var/lib/cowrie/downloads/ w,
  /opt/cowrie/var/lib/cowrie/downloads/** rw,

  # Cowrie data directory (e.g., for txtcmds, other runtime data)
  /opt/cowrie/var/lib/cowrie/ w,
  /opt/cowrie/var/lib/cowrie/** rw, # May need refinement

  # Cowrie temporary files
  /opt/cowrie/tmp/** rw,
  /tmp/** rw, # If cowrie or its subprocesses use /tmp

  # Proc filesystem access (often needed for system information)
  /proc/ r,
  /proc/** r, # Be cautious, /proc can be sensitive. Restrict if possible.
  deny /proc/kcore r, # Explicitly deny access to kernel core dump

  # Deny access to sensitive host paths (explicitly, though default deny should cover)
  # These are examples; add more as necessary.
  deny /etc/shadow w,
  deny /etc/sudoers w,
  deny /root/** rwxlk,
  deny /home/** rwxlk,
  deny /mnt/** rwxlk,
  deny /media/** rwxlk,
  deny /boot/** rwxlk,
  deny /sys/** w, # Deny writes to sysfs
  deny /dev/** wmk, # Deny write/mmap/lock to most devices, allow read for some like /dev/null, /dev/random
  /dev/null rw,
  /dev/random r,
  /dev/urandom r,
  /dev/zero rw,
  /dev/pts/* rw, # For pseudo-terminals if needed by interactive shells simulated by Cowrie

  # --- Capability Rules ---
  # Allow binding to privileged ports (if Cowrie listens on < 1024, though default is 2222)
  # capability net_bind_service, # Usually not needed if listening on >1024
  capability setgid,           # If cowrie needs to change group ID
  capability setuid,           # If cowrie needs to change user ID
  capability sys_chroot,       # If cowrie uses chroot for some commands
  # capability dac_override,   # Avoid if possible, allows bypassing file permissions
  # capability sys_admin,      # Avoid if possible, very powerful

  # Deny all other capabilities
                               # Unlisted capabilities are implicitly denied. (No explicit 'deny capability *' needed)

  # --- Signal Rules ---
  # Allow Cowrie to send and receive signals as needed
  signal (send) peer=docker-cowrie,
  signal (receive),

  # --- Ptrace Rules ---
  # Deny ptrace by default unless specifically needed (e.g., for debugging tools within container)
  deny ptrace (read,trace) peer=docker-cowrie,

  # --- Change Profile ---
  # Allow specific transitions if Cowrie executes other profiled applications
  # change_profile -> other_profile_name,

  # End of profile
}
